{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\e0509\\\\Desktop\\\\MedicalCenterProject\\\\client\\\\src\\\\testQueue.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestQueue = () => {\n  _s();\n  const [reception, setReception] = useState([]);\n  const [doctor, setDoctor] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const reception = await axios.get(`http://localhost:3001/main-table/receptionQueue`);\n        const doctor = await axios.get(`http://localhost:3001/main-table/doctorQueue`);\n        setReception(reception.data.data);\n        setDoctor(doctor.data.data);\n      } catch (error) {\n        console.error('Error fetching queue data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queuesLists\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u05E7\\u05D1\\u05DC\\u05D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), reception.map(({\n        name,\n        uniqueNumber,\n        _id,\n        turnId\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allPatients\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"patientDet\",\n          children: [\" \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"patientDet\",\n          children: uniqueNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"patientDet\",\n          children: turnId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u05E8\\u05D5\\u05E4\\u05D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), reception.map(({\n        name,\n        uniqueNumber,\n        _id,\n        turnId\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"allPatients\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"patientDet\",\n          children: [\" \", name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"patientDet\",\n          children: uniqueNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"patientDet\",\n          children: turnId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TestQueue, \"j0VCY/q50GMnsPGS4UkqzVqBTIw=\");\n_c = TestQueue;\nexport default TestQueue;\nvar _c;\n$RefreshReg$(_c, \"TestQueue\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TestQueue","_s","reception","setReception","doctor","setDoctor","fetchData","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","name","uniqueNumber","_id","turnId","_c","$RefreshReg$"],"sources":["C:/Users/e0509/Desktop/MedicalCenterProject/client/src/testQueue.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst TestQueue = () => {\r\n  const [reception, setReception] = useState([]);\r\n  const [doctor, setDoctor] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const reception = await axios.get(`http://localhost:3001/main-table/receptionQueue`);\r\n        const doctor = await axios.get(`http://localhost:3001/main-table/doctorQueue`);\r\n\r\n        setReception(reception.data.data);\r\n        setDoctor(doctor.data.data);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching queue data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n    <div className='queuesLists'>\r\n      <div>\r\n        <h1>קבלה</h1>\r\n        {reception.map(({ name, uniqueNumber, _id, turnId }) => (\r\n          <div className='allPatients' key={_id}>\r\n            <span className='patientDet'> {name}</span>\r\n            <span className='patientDet'>{uniqueNumber}</span>\r\n            <span className='patientDet'>{turnId}</span>\r\n\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h1>רופא</h1>\r\n        {reception.map(({ name, uniqueNumber, _id, turnId }) => (\r\n          <div className='allPatients' key={_id}>\r\n            <span className='patientDet'> {name}</span>\r\n            <span className='patientDet'>{uniqueNumber}</span>\r\n            <span className='patientDet'>{turnId}</span>\r\n\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestQueue;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMJ,SAAS,GAAG,MAAML,KAAK,CAACU,GAAG,CAAE,iDAAgD,CAAC;QACpF,MAAMH,MAAM,GAAG,MAAMP,KAAK,CAACU,GAAG,CAAE,8CAA6C,CAAC;QAE9EJ,YAAY,CAACD,SAAS,CAACM,IAAI,CAACA,IAAI,CAAC;QACjCH,SAAS,CAACD,MAAM,CAACI,IAAI,CAACA,IAAI,CAAC;MAE7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBACEP,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1Bb,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACZd,SAAS,CAACe,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEC,YAAY;QAAEC,GAAG;QAAEC;MAAO,CAAC,kBACjDtB,OAAA;QAAKY,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bb,OAAA;UAAMY,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,GAAC,EAACM,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjB,OAAA;UAAMY,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEO;QAAY;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDjB,OAAA;UAAMY,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAES;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAHZI,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhC,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACZd,SAAS,CAACe,GAAG,CAAC,CAAC;QAAEC,IAAI;QAAEC,YAAY;QAAEC,GAAG;QAAEC;MAAO,CAAC,kBACjDtB,OAAA;QAAKY,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1Bb,OAAA;UAAMY,SAAS,EAAC,YAAY;UAAAC,QAAA,GAAC,GAAC,EAACM,IAAI;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3CjB,OAAA;UAAMY,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEO;QAAY;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAClDjB,OAAA;UAAMY,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAES;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAHZI,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhC,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV,CAAC;AAACf,EAAA,CAhDID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}