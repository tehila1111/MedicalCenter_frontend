{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"rotate\", \"dominantBaseline\"],\n  _excluded2 = [\"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { NoSsr } from '@mui/base/NoSsr';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useThemeProps, useTheme, styled } from '@mui/material/styles';\nimport { DrawingContext } from '../context/DrawingProvider';\nimport { getSeriesToDisplay } from './utils';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { getLegendUtilityClass } from './chartsLegendClasses';\nimport { ChartsText } from '../ChartsText';\nimport { getWordsByLines } from '../internals/getWordsByLines';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction\n  } = ownerState;\n  const slots = {\n    root: ['root', direction],\n    mark: ['mark'],\n    label: ['label'],\n    series: ['series']\n  };\n  return composeClasses(slots, getLegendUtilityClass, classes);\n};\nexport const ChartsLegendRoot = styled('g', {\n  name: 'MuiChartsLegend',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst defaultProps = {\n  position: {\n    horizontal: 'middle',\n    vertical: 'top'\n  },\n  direction: 'row'\n};\n/**\n * Transforms number or partial padding object to a defaultized padding object.\n */\nconst getStandardizedPadding = padding => {\n  if (typeof padding === 'number') {\n    return {\n      left: padding,\n      right: padding,\n      top: padding,\n      bottom: padding\n    };\n  }\n  return _extends({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, padding);\n};\nfunction DefaultChartsLegend(props) {\n  const {\n    hidden,\n    position,\n    direction,\n    seriesToDisplay,\n    drawingArea,\n    classes,\n    itemMarkWidth = 20,\n    itemMarkHeight = 20,\n    markGap = 5,\n    itemGap = 10,\n    padding: paddingProps = 10,\n    labelStyle: inLabelStyle\n  } = props;\n  const theme = useTheme();\n  const labelStyle = React.useMemo(() => _extends({}, theme.typography.subtitle1, {\n    color: 'inherit',\n    dominantBaseline: 'central',\n    textAnchor: 'start',\n    fill: (theme.vars || theme).palette.text.primary,\n    lineHeight: 1\n  }, inLabelStyle),\n  // To say to TS that the dominantBaseline and textAnchor are correct\n  [inLabelStyle, theme]);\n  const padding = React.useMemo(() => getStandardizedPadding(paddingProps), [paddingProps]);\n  const getItemSpace = React.useCallback((label, inStyle = {}) => {\n    const style = _objectWithoutPropertiesLoose(inStyle, _excluded);\n    const linesSize = getWordsByLines({\n      style,\n      needsComputation: true,\n      text: label\n    });\n    const innerSize = {\n      innerWidth: itemMarkWidth + markGap + Math.max(...linesSize.map(size => size.width)),\n      innerHeight: Math.max(itemMarkHeight, linesSize.length * linesSize[0].height)\n    };\n    return _extends({}, innerSize, {\n      outerWidth: innerSize.innerWidth + itemGap,\n      outerHeight: innerSize.innerHeight + itemGap\n    });\n  }, [itemGap, itemMarkHeight, itemMarkWidth, markGap]);\n  const totalWidth = drawingArea.left + drawingArea.width + drawingArea.right;\n  const totalHeight = drawingArea.top + drawingArea.height + drawingArea.bottom;\n  const availableWidth = totalWidth - padding.left - padding.right;\n  const availableHeight = totalHeight - padding.top - padding.bottom;\n  const seriesWithPosition = React.useMemo(() => {\n    // Start at 0, 0. Will be modified later by padding and position.\n    let x = 0;\n    let y = 0;\n\n    // total values used to align legend later.\n    let totalWidthUsed = 0;\n    let totalHeightUsed = 0;\n    let rowIndex = 0;\n    const rowMaxHeight = [0];\n    const seriesWithRawPosition = seriesToDisplay.map(_ref => {\n      let {\n          label\n        } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n      const itemSpace = getItemSpace(label, labelStyle);\n      const rep = _extends({}, other, {\n        label,\n        positionX: x,\n        positionY: y,\n        innerHeight: itemSpace.innerHeight,\n        innerWidth: itemSpace.innerWidth,\n        outerHeight: itemSpace.outerHeight,\n        outerWidth: itemSpace.outerWidth,\n        rowIndex\n      });\n      if (direction === 'row') {\n        if (x + itemSpace.innerWidth > availableWidth) {\n          // This legend item would create overflow along the x-axis, so we start a new row.\n          x = 0;\n          y += rowMaxHeight[rowIndex];\n          rowIndex += 1;\n          if (rowMaxHeight.length <= rowIndex) {\n            rowMaxHeight.push(0);\n          }\n          rep.positionX = x;\n          rep.positionY = y;\n          rep.rowIndex = rowIndex;\n        }\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n        rowMaxHeight[rowIndex] = Math.max(rowMaxHeight[rowIndex], itemSpace.outerHeight);\n        x += itemSpace.outerWidth;\n      }\n      if (direction === 'column') {\n        if (y + itemSpace.innerHeight > availableHeight) {\n          // This legend item would create overflow along the y-axis, so we start a new column.\n          x = totalWidthUsed + itemGap;\n          y = 0;\n          rowIndex = 0;\n          rep.positionX = x;\n          rep.positionY = y;\n          rep.rowIndex = rowIndex;\n        }\n        if (rowMaxHeight.length <= rowIndex) {\n          rowMaxHeight.push(0);\n        }\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n        rowIndex += 1;\n        y += itemSpace.outerHeight;\n      }\n      return rep;\n    });\n\n    // Move the legend according to padding and position\n    let gapX = 0;\n    let gapY = 0;\n    switch (position.horizontal) {\n      case 'left':\n        gapX = padding.left;\n        break;\n      case 'right':\n        gapX = totalWidth - padding.right - totalWidthUsed;\n        break;\n      default:\n        gapX = (totalWidth - totalWidthUsed) / 2;\n        break;\n    }\n    switch (position.vertical) {\n      case 'top':\n        gapY = padding.top;\n        break;\n      case 'bottom':\n        gapY = totalHeight - padding.bottom - totalHeightUsed;\n        break;\n      default:\n        gapY = (totalHeight - totalHeightUsed) / 2;\n        break;\n    }\n    return seriesWithRawPosition.map(item => _extends({}, item, {\n      // Add the gap due to the position\n      positionX: item.positionX + gapX,\n      // Add the gap due to the position\n      positionY: item.positionY + gapY + (direction === 'row' ? rowMaxHeight[item.rowIndex] / 2 // Get the center of the entire row\n      : item.outerHeight / 2) // Get the center of the item\n    }));\n  }, [seriesToDisplay, position.horizontal, position.vertical, getItemSpace, labelStyle, direction, availableWidth, availableHeight, itemGap, padding.left, padding.right, padding.top, padding.bottom, totalWidth, totalHeight]);\n  if (hidden) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsx(ChartsLegendRoot, {\n      className: classes.root,\n      children: seriesWithPosition.map(({\n        id,\n        label,\n        color,\n        positionX,\n        positionY\n      }) => /*#__PURE__*/_jsxs(\"g\", {\n        className: classes.series,\n        transform: `translate(${positionX} ${positionY})`,\n        children: [/*#__PURE__*/_jsx(\"rect\", {\n          className: classes.mark,\n          y: -itemMarkHeight / 2,\n          width: itemMarkWidth,\n          height: itemMarkHeight,\n          fill: color\n        }), /*#__PURE__*/_jsx(ChartsText, {\n          style: labelStyle,\n          text: label,\n          x: itemMarkWidth + markGap,\n          y: 0\n        })]\n      }, id))\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']).isRequired,\n  drawingArea: PropTypes.shape({\n    bottom: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }).isRequired,\n  /**\n   * Set to true to hide the legend.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  /**\n   * Space between two legend items (in px).\n   * @default 10\n   */\n  itemGap: PropTypes.number,\n  /**\n   * Height of the item mark (in px).\n   * @default 20\n   */\n  itemMarkHeight: PropTypes.number,\n  /**\n   * Width of the item mark (in px).\n   * @default 20\n   */\n  itemMarkWidth: PropTypes.number,\n  /**\n   * Style applied to legend labels.\n   * @default theme.typography.subtitle1\n   */\n  labelStyle: PropTypes.object,\n  /**\n   * Space between the mark and the label (in px).\n   * @default 5\n   */\n  markGap: PropTypes.number,\n  /**\n   * Legend padding (in px).\n   * Can either be a single number, or an object with top, left, bottom, right properties.\n   * @default 0\n   */\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  })]),\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }).isRequired,\n  series: PropTypes.shape({\n    bar: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n      stackingGroups: PropTypes.arrayOf(PropTypes.shape({\n        ids: PropTypes.arrayOf(PropTypes.string).isRequired,\n        stackingOffset: PropTypes.func.isRequired,\n        stackingOrder: PropTypes.func.isRequired\n      })).isRequired\n    }),\n    line: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n      stackingGroups: PropTypes.arrayOf(PropTypes.shape({\n        ids: PropTypes.arrayOf(PropTypes.string).isRequired,\n        stackingOffset: PropTypes.func.isRequired,\n        stackingOrder: PropTypes.func.isRequired\n      })).isRequired\n    }),\n    pie: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired\n    }),\n    scatter: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired\n    })\n  }).isRequired,\n  seriesToDisplay: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n} : void 0;\nfunction ChartsLegend(inProps) {\n  var _slots$legend;\n  const props = useThemeProps({\n    props: _extends({}, defaultProps, inProps),\n    name: 'MuiChartsLegend'\n  });\n  const {\n    position,\n    direction,\n    hidden,\n    slots,\n    slotProps\n  } = props;\n  const theme = useTheme();\n  const classes = useUtilityClasses(_extends({}, props, {\n    theme\n  }));\n  const drawingArea = React.useContext(DrawingContext);\n  const series = React.useContext(SeriesContext);\n  const seriesToDisplay = getSeriesToDisplay(series);\n  const ChartLegendRender = (_slots$legend = slots == null ? void 0 : slots.legend) != null ? _slots$legend : DefaultChartsLegend;\n  const chartLegendRenderProps = useSlotProps({\n    elementType: ChartLegendRender,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.legend,\n    additionalProps: {\n      position,\n      direction,\n      classes,\n      drawingArea,\n      series,\n      hidden,\n      seriesToDisplay\n    },\n    ownerState: {}\n  });\n  return /*#__PURE__*/_jsx(ChartLegendRender, _extends({}, chartLegendRenderProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']),\n  /**\n   * Set to true to hide the legend.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { ChartsLegend };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","_excluded2","React","PropTypes","useSlotProps","NoSsr","unstable_composeClasses","composeClasses","useThemeProps","useTheme","styled","DrawingContext","getSeriesToDisplay","SeriesContext","getLegendUtilityClass","ChartsText","getWordsByLines","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","direction","slots","root","mark","label","series","ChartsLegendRoot","name","slot","overridesResolver","props","styles","defaultProps","position","horizontal","vertical","getStandardizedPadding","padding","left","right","top","bottom","DefaultChartsLegend","hidden","seriesToDisplay","drawingArea","itemMarkWidth","itemMarkHeight","markGap","itemGap","paddingProps","labelStyle","inLabelStyle","theme","useMemo","typography","subtitle1","color","dominantBaseline","textAnchor","fill","vars","palette","text","primary","lineHeight","getItemSpace","useCallback","inStyle","style","linesSize","needsComputation","innerSize","innerWidth","Math","max","map","size","width","innerHeight","length","height","outerWidth","outerHeight","totalWidth","totalHeight","availableWidth","availableHeight","seriesWithPosition","x","y","totalWidthUsed","totalHeightUsed","rowIndex","rowMaxHeight","seriesWithRawPosition","_ref","other","itemSpace","rep","positionX","positionY","push","gapX","gapY","item","children","className","id","transform","process","env","NODE_ENV","propTypes","object","isRequired","oneOf","shape","number","bool","oneOfType","bar","seriesOrder","arrayOf","string","stackingGroups","ids","stackingOffset","func","stackingOrder","line","pie","scatter","ChartsLegend","inProps","_slots$legend","slotProps","useContext","ChartLegendRender","legend","chartLegendRenderProps","elementType","externalSlotProps","additionalProps"],"sources":["C:/Users/e0509/Desktop/MedicalCenterProject/client/node_modules/@mui/x-charts/esm/ChartsLegend/ChartsLegend.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"rotate\", \"dominantBaseline\"],\n  _excluded2 = [\"label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '@mui/base/utils';\nimport { NoSsr } from '@mui/base/NoSsr';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useThemeProps, useTheme, styled } from '@mui/material/styles';\nimport { DrawingContext } from '../context/DrawingProvider';\nimport { getSeriesToDisplay } from './utils';\nimport { SeriesContext } from '../context/SeriesContextProvider';\nimport { getLegendUtilityClass } from './chartsLegendClasses';\nimport { ChartsText } from '../ChartsText';\nimport { getWordsByLines } from '../internals/getWordsByLines';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    direction\n  } = ownerState;\n  const slots = {\n    root: ['root', direction],\n    mark: ['mark'],\n    label: ['label'],\n    series: ['series']\n  };\n  return composeClasses(slots, getLegendUtilityClass, classes);\n};\nexport const ChartsLegendRoot = styled('g', {\n  name: 'MuiChartsLegend',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({});\nconst defaultProps = {\n  position: {\n    horizontal: 'middle',\n    vertical: 'top'\n  },\n  direction: 'row'\n};\n/**\n * Transforms number or partial padding object to a defaultized padding object.\n */\nconst getStandardizedPadding = padding => {\n  if (typeof padding === 'number') {\n    return {\n      left: padding,\n      right: padding,\n      top: padding,\n      bottom: padding\n    };\n  }\n  return _extends({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  }, padding);\n};\nfunction DefaultChartsLegend(props) {\n  const {\n    hidden,\n    position,\n    direction,\n    seriesToDisplay,\n    drawingArea,\n    classes,\n    itemMarkWidth = 20,\n    itemMarkHeight = 20,\n    markGap = 5,\n    itemGap = 10,\n    padding: paddingProps = 10,\n    labelStyle: inLabelStyle\n  } = props;\n  const theme = useTheme();\n  const labelStyle = React.useMemo(() => _extends({}, theme.typography.subtitle1, {\n    color: 'inherit',\n    dominantBaseline: 'central',\n    textAnchor: 'start',\n    fill: (theme.vars || theme).palette.text.primary,\n    lineHeight: 1\n  }, inLabelStyle),\n  // To say to TS that the dominantBaseline and textAnchor are correct\n  [inLabelStyle, theme]);\n  const padding = React.useMemo(() => getStandardizedPadding(paddingProps), [paddingProps]);\n  const getItemSpace = React.useCallback((label, inStyle = {}) => {\n    const style = _objectWithoutPropertiesLoose(inStyle, _excluded);\n    const linesSize = getWordsByLines({\n      style,\n      needsComputation: true,\n      text: label\n    });\n    const innerSize = {\n      innerWidth: itemMarkWidth + markGap + Math.max(...linesSize.map(size => size.width)),\n      innerHeight: Math.max(itemMarkHeight, linesSize.length * linesSize[0].height)\n    };\n    return _extends({}, innerSize, {\n      outerWidth: innerSize.innerWidth + itemGap,\n      outerHeight: innerSize.innerHeight + itemGap\n    });\n  }, [itemGap, itemMarkHeight, itemMarkWidth, markGap]);\n  const totalWidth = drawingArea.left + drawingArea.width + drawingArea.right;\n  const totalHeight = drawingArea.top + drawingArea.height + drawingArea.bottom;\n  const availableWidth = totalWidth - padding.left - padding.right;\n  const availableHeight = totalHeight - padding.top - padding.bottom;\n  const seriesWithPosition = React.useMemo(() => {\n    // Start at 0, 0. Will be modified later by padding and position.\n    let x = 0;\n    let y = 0;\n\n    // total values used to align legend later.\n    let totalWidthUsed = 0;\n    let totalHeightUsed = 0;\n    let rowIndex = 0;\n    const rowMaxHeight = [0];\n    const seriesWithRawPosition = seriesToDisplay.map(_ref => {\n      let {\n          label\n        } = _ref,\n        other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n      const itemSpace = getItemSpace(label, labelStyle);\n      const rep = _extends({}, other, {\n        label,\n        positionX: x,\n        positionY: y,\n        innerHeight: itemSpace.innerHeight,\n        innerWidth: itemSpace.innerWidth,\n        outerHeight: itemSpace.outerHeight,\n        outerWidth: itemSpace.outerWidth,\n        rowIndex\n      });\n      if (direction === 'row') {\n        if (x + itemSpace.innerWidth > availableWidth) {\n          // This legend item would create overflow along the x-axis, so we start a new row.\n          x = 0;\n          y += rowMaxHeight[rowIndex];\n          rowIndex += 1;\n          if (rowMaxHeight.length <= rowIndex) {\n            rowMaxHeight.push(0);\n          }\n          rep.positionX = x;\n          rep.positionY = y;\n          rep.rowIndex = rowIndex;\n        }\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n        rowMaxHeight[rowIndex] = Math.max(rowMaxHeight[rowIndex], itemSpace.outerHeight);\n        x += itemSpace.outerWidth;\n      }\n      if (direction === 'column') {\n        if (y + itemSpace.innerHeight > availableHeight) {\n          // This legend item would create overflow along the y-axis, so we start a new column.\n          x = totalWidthUsed + itemGap;\n          y = 0;\n          rowIndex = 0;\n          rep.positionX = x;\n          rep.positionY = y;\n          rep.rowIndex = rowIndex;\n        }\n        if (rowMaxHeight.length <= rowIndex) {\n          rowMaxHeight.push(0);\n        }\n        totalWidthUsed = Math.max(totalWidthUsed, x + itemSpace.outerWidth);\n        totalHeightUsed = Math.max(totalHeightUsed, y + itemSpace.outerHeight);\n        rowIndex += 1;\n        y += itemSpace.outerHeight;\n      }\n      return rep;\n    });\n\n    // Move the legend according to padding and position\n    let gapX = 0;\n    let gapY = 0;\n    switch (position.horizontal) {\n      case 'left':\n        gapX = padding.left;\n        break;\n      case 'right':\n        gapX = totalWidth - padding.right - totalWidthUsed;\n        break;\n      default:\n        gapX = (totalWidth - totalWidthUsed) / 2;\n        break;\n    }\n    switch (position.vertical) {\n      case 'top':\n        gapY = padding.top;\n        break;\n      case 'bottom':\n        gapY = totalHeight - padding.bottom - totalHeightUsed;\n        break;\n      default:\n        gapY = (totalHeight - totalHeightUsed) / 2;\n        break;\n    }\n    return seriesWithRawPosition.map(item => _extends({}, item, {\n      // Add the gap due to the position\n      positionX: item.positionX + gapX,\n      // Add the gap due to the position\n      positionY: item.positionY + gapY + (direction === 'row' ? rowMaxHeight[item.rowIndex] / 2 // Get the center of the entire row\n      : item.outerHeight / 2) // Get the center of the item\n    }));\n  }, [seriesToDisplay, position.horizontal, position.vertical, getItemSpace, labelStyle, direction, availableWidth, availableHeight, itemGap, padding.left, padding.right, padding.top, padding.bottom, totalWidth, totalHeight]);\n  if (hidden) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsx(ChartsLegendRoot, {\n      className: classes.root,\n      children: seriesWithPosition.map(({\n        id,\n        label,\n        color,\n        positionX,\n        positionY\n      }) => /*#__PURE__*/_jsxs(\"g\", {\n        className: classes.series,\n        transform: `translate(${positionX} ${positionY})`,\n        children: [/*#__PURE__*/_jsx(\"rect\", {\n          className: classes.mark,\n          y: -itemMarkHeight / 2,\n          width: itemMarkWidth,\n          height: itemMarkHeight,\n          fill: color\n        }), /*#__PURE__*/_jsx(ChartsText, {\n          style: labelStyle,\n          text: label,\n          x: itemMarkWidth + markGap,\n          y: 0\n        })]\n      }, id))\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']).isRequired,\n  drawingArea: PropTypes.shape({\n    bottom: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired,\n    right: PropTypes.number.isRequired,\n    top: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }).isRequired,\n  /**\n   * Set to true to hide the legend.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  /**\n   * Space between two legend items (in px).\n   * @default 10\n   */\n  itemGap: PropTypes.number,\n  /**\n   * Height of the item mark (in px).\n   * @default 20\n   */\n  itemMarkHeight: PropTypes.number,\n  /**\n   * Width of the item mark (in px).\n   * @default 20\n   */\n  itemMarkWidth: PropTypes.number,\n  /**\n   * Style applied to legend labels.\n   * @default theme.typography.subtitle1\n   */\n  labelStyle: PropTypes.object,\n  /**\n   * Space between the mark and the label (in px).\n   * @default 5\n   */\n  markGap: PropTypes.number,\n  /**\n   * Legend padding (in px).\n   * Can either be a single number, or an object with top, left, bottom, right properties.\n   * @default 0\n   */\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  })]),\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }).isRequired,\n  series: PropTypes.shape({\n    bar: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n      stackingGroups: PropTypes.arrayOf(PropTypes.shape({\n        ids: PropTypes.arrayOf(PropTypes.string).isRequired,\n        stackingOffset: PropTypes.func.isRequired,\n        stackingOrder: PropTypes.func.isRequired\n      })).isRequired\n    }),\n    line: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired,\n      stackingGroups: PropTypes.arrayOf(PropTypes.shape({\n        ids: PropTypes.arrayOf(PropTypes.string).isRequired,\n        stackingOffset: PropTypes.func.isRequired,\n        stackingOrder: PropTypes.func.isRequired\n      })).isRequired\n    }),\n    pie: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired\n    }),\n    scatter: PropTypes.shape({\n      series: PropTypes.object.isRequired,\n      seriesOrder: PropTypes.arrayOf(PropTypes.string).isRequired\n    })\n  }).isRequired,\n  seriesToDisplay: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  })).isRequired\n} : void 0;\nfunction ChartsLegend(inProps) {\n  var _slots$legend;\n  const props = useThemeProps({\n    props: _extends({}, defaultProps, inProps),\n    name: 'MuiChartsLegend'\n  });\n  const {\n    position,\n    direction,\n    hidden,\n    slots,\n    slotProps\n  } = props;\n  const theme = useTheme();\n  const classes = useUtilityClasses(_extends({}, props, {\n    theme\n  }));\n  const drawingArea = React.useContext(DrawingContext);\n  const series = React.useContext(SeriesContext);\n  const seriesToDisplay = getSeriesToDisplay(series);\n  const ChartLegendRender = (_slots$legend = slots == null ? void 0 : slots.legend) != null ? _slots$legend : DefaultChartsLegend;\n  const chartLegendRenderProps = useSlotProps({\n    elementType: ChartLegendRender,\n    externalSlotProps: slotProps == null ? void 0 : slotProps.legend,\n    additionalProps: {\n      position,\n      direction,\n      classes,\n      drawingArea,\n      series,\n      hidden,\n      seriesToDisplay\n    },\n    ownerState: {}\n  });\n  return /*#__PURE__*/_jsx(ChartLegendRender, _extends({}, chartLegendRenderProps));\n}\nprocess.env.NODE_ENV !== \"production\" ? ChartsLegend.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The direction of the legend layout.\n   * The default depends on the chart.\n   */\n  direction: PropTypes.oneOf(['column', 'row']),\n  /**\n   * Set to true to hide the legend.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n  position: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'middle', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'middle', 'top']).isRequired\n  }),\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { ChartsLegend };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}