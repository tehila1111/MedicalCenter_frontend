{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\e0509\\\\Desktop\\\\MedicalCenterProject\\\\client\\\\src\\\\PatientEnter\\\\patientEnter.jsx\",\n  _s = $RefreshSig$();\n// import './patientEnter.css'\n// import doctorImg from './doctor.png'\n\n// const PatientEnter = () => {\n\n//     return (\n//         <div className='patientEnterCont'>\n//             <div className='enterBoard'>\n\n//             </div>\n\n//             <img src={doctorImg} alt='doctorImg' className='doctorImg'></img>\n//         </div>\n//     );\n// };\n\n// export default PatientEnter;\nimport './patientEnter.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PatientEnter = ({\n  handleEnterReception\n}) => {\n  _s();\n  const [patientId, setPatientId] = useState('');\n  const [patientName, setPatientName] = useState('');\n  const [isConfirmationPressed2, setIsConfirmationPressed2] = useState(false);\n  const [currentTime, setCurrentTime] = useState('');\n  const [uniqueNumber, setUniqueNumber] = useState('');\n  const handleKeyPressName = key => {\n    if (key === 'x') {\n      // Delete the last character\n      setPatientName(prevName => prevName.slice(0, -1));\n    } else {\n      // Append the character\n      setPatientName(prevName => prevName + key);\n    }\n  };\n  const handleSubmit = () => {\n    if (patientName.trim() === '') {\n      alert('Please enter Name');\n      return;\n    }\n    setIsConfirmationPressed2(true);\n\n    // You may generate a unique number, date, and time here\n    const uniqueNumber1 = handleEnterReception();\n    const currentTime1 = new Date().toLocaleTimeString();\n    setCurrentTime(currentTime1);\n    setUniqueNumber(uniqueNumber1);\n\n    // Reset the state after 10 seconds\n    setTimeout(() => {\n      setPatientName('');\n      setIsConfirmationPressed2(false);\n    }, 5000);\n  };\n  const hebrewCharacters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ך', 'ל', 'מ', 'ם', 'נ', 'ן', 'ס', 'ע', 'פ', 'ף', 'צ', 'ץ', 'ק', 'ר', 'ש', 'ת'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientNumber\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patientNumberCont\",\n      children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patientName enter\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05E9\\u05DD \\u05DE\\u05DC\\u05D0  \",\n            type: \"text\",\n            value: patientName,\n            onChange: e => setPatientName(e.target.value),\n            className: \"inputBtn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"virtual-keyboard hebrew\",\n          children: [[...hebrewCharacters].map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"keyboard\",\n            onClick: () => handleKeyPressName(key.toString()),\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"keyboard\",\n            onClick: () => handleKeyPressName(' '),\n            children: \"__\"\n          }, ' ', false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" keyboard deleteNumber\",\n            onClick: () => handleKeyPressName('x'),\n            children: \"x\"\n          }, 'x', false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"getNumber\",\n          onClick: handleSubmit,\n          children: \"\\u05E7\\u05D1\\u05DC\\u05EA \\u05EA\\u05D5\\u05E8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patientInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"numberCont\",\n            children: [\"\\u05DE\\u05E1\\u05E4\\u05E8\\u05DA \\u05D1\\u05EA\\u05D5\\u05E8:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uniqueNumber\",\n              children: uniqueNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u05E9\\u05DD: \", patientName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u05E9\\u05E2\\u05D4: \", currentTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"saveNumber\",\n          children: \"\\u05D9\\u05E9 \\u05DC\\u05E9\\u05DE\\u05D5\\u05E8 \\u05D0\\u05EA \\u05D4\\u05DE\\u05E1\\u05E4\\u05E8 \\u05DC\\u05D0\\u05D5\\u05E8\\u05DA \\u05D4\\u05D8\\u05D9\\u05E4\\u05D5\\u05DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientEnter, \"0wOFWZQmygzy/tsFTSHvg3cSLM8=\");\n_c = PatientEnter;\nexport default PatientEnter;\nvar _c;\n$RefreshReg$(_c, \"PatientEnter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientEnter","handleEnterReception","_s","patientId","setPatientId","patientName","setPatientName","isConfirmationPressed2","setIsConfirmationPressed2","currentTime","setCurrentTime","uniqueNumber","setUniqueNumber","handleKeyPressName","key","prevName","slice","handleSubmit","trim","alert","uniqueNumber1","currentTime1","Date","toLocaleTimeString","setTimeout","hebrewCharacters","className","children","placeholder","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","toString","_c","$RefreshReg$"],"sources":["C:/Users/e0509/Desktop/MedicalCenterProject/client/src/PatientEnter/patientEnter.jsx"],"sourcesContent":["// import './patientEnter.css'\r\n// import doctorImg from './doctor.png'\r\n\r\n// const PatientEnter = () => {\r\n\r\n\r\n//     return (\r\n//         <div className='patientEnterCont'>\r\n//             <div className='enterBoard'>\r\n\r\n//             </div>\r\n\r\n//             <img src={doctorImg} alt='doctorImg' className='doctorImg'></img>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default PatientEnter;\r\nimport './patientEnter.css';\r\nimport React, { useState } from 'react';\r\n\r\nconst PatientEnter = ({ handleEnterReception }) => {\r\n    const [patientId, setPatientId] = useState('');\r\n    const [patientName, setPatientName] = useState('');\r\n    const [isConfirmationPressed2, setIsConfirmationPressed2] = useState(false);\r\n    const [currentTime, setCurrentTime] = useState('');\r\n    const [uniqueNumber, setUniqueNumber] = useState('');\r\n\r\n\r\n\r\n    const handleKeyPressName = (key) => {\r\n        if (key === 'x') {\r\n            // Delete the last character\r\n            setPatientName((prevName) => prevName.slice(0, -1));\r\n        } else {\r\n            // Append the character\r\n            setPatientName((prevName) => prevName + key);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n\r\n        if (patientName.trim() === '') {\r\n            alert('Please enter Name');\r\n            return;\r\n        }\r\n\r\n        setIsConfirmationPressed2(true);\r\n\r\n        // You may generate a unique number, date, and time here\r\n        const uniqueNumber1 = handleEnterReception();\r\n        const currentTime1 = new Date().toLocaleTimeString();\r\n\r\n        setCurrentTime(currentTime1);\r\n        setUniqueNumber(uniqueNumber1);\r\n\r\n        // Reset the state after 10 seconds\r\n        setTimeout(() => {\r\n            setPatientName('');\r\n            setIsConfirmationPressed2(false);\r\n        }, 5000);\r\n    }\r\n\r\n    const hebrewCharacters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ך', 'ל', 'מ', 'ם', 'נ', 'ן', 'ס', 'ע', 'פ', 'ף', 'צ', 'ץ', 'ק', 'ר', 'ש', 'ת'];\r\n\r\n    return (\r\n        <div className='patientNumber'>\r\n            <div className='patientNumberCont'>\r\n                <>\r\n                    <div className='patientName enter'>\r\n                        <input\r\n                            placeholder=\"הכנס שם מלא  \"\r\n                            type=\"text\"\r\n                            value={patientName}\r\n                            onChange={(e) => setPatientName(e.target.value)}\r\n                            className='inputBtn'\r\n                        />\r\n                    </div>\r\n                    <div className='virtual-keyboard hebrew'>\r\n                        {[...hebrewCharacters].map((key) => (\r\n                            <button\r\n                                key={key}\r\n                                className='keyboard'\r\n                                onClick={() => handleKeyPressName(key.toString())}\r\n                            >\r\n                                {key}\r\n                            </button>\r\n                        ))}\r\n                        <button\r\n                            className='keyboard'\r\n                            onClick={() => handleKeyPressName(' ')}\r\n                            key={' '}\r\n                        >\r\n                            __\r\n                        </button>\r\n                        <button\r\n                            className=' keyboard deleteNumber'\r\n                            onClick={() => handleKeyPressName('x')}\r\n                            key={'x'}\r\n                        >\r\n                            x\r\n                        </button>\r\n                    </div>\r\n                    <button className='getNumber' onClick={handleSubmit}>\r\n                        קבלת תור\r\n                    </button>\r\n                </>\r\n\r\n                <>\r\n                    <div className='patientInfo'>\r\n                        <div className='numberCont'>מספרך בתור:\r\n                            <div className='uniqueNumber'>\r\n                                {uniqueNumber}\r\n                            </div>\r\n                        </div>\r\n                        <div>שם: {patientName}</div>\r\n\r\n                        <div>שעה: {currentTime}</div>\r\n                    </div>\r\n                    <div className='saveNumber'>\r\n                        יש לשמור את המספר לאורך הטיפול\r\n                    </div>\r\n                </>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientEnter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}