{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\e0509\\\\Desktop\\\\MedicalCenterProject\\\\client\\\\src\\\\PatientEnter\\\\patientEnter.jsx\";\nimport './patientEnter.css';\nimport doctorImg from './doctor.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientEnter = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patientEnterCont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enterBoard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: doctorImg,\n      alt: \"doctorImg\",\n      className: \"doctorImg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = PatientEnter;\nexport default PatientEnter;\n// import './patientEnter.css';\n// import React, { useState } from 'react';\n\n// const PatientEnter = () => {\n//     const [patientId, setPatientId] = useState('');\n//     const [patientName, setPatientName] = useState('');\n//     const [isConfirmationPressed, setIsConfirmationPressed] = useState(false);\n//     const [isConfirmationPressed2, setIsConfirmationPressed2] = useState(false);\n//     const [currentTime, setCurrentTime] = useState('');\n//     const [uniqueNumber, setUniqueNumber] = useState('F6');\n\n//     const handleKeyPressNumbers = (key) => {\n//         if (key === 'x') {\n//             // Delete the last character\n//             setPatientId((prevId) => prevId.slice(0, -1));\n//         } else if (key === 'המשך') {\n//             setIsConfirmationPressed(true);\n//         } else {\n//             // Append the digit or character\n//             setPatientId((prevId) => prevId + key);\n//         }\n//     };\n\n//     const handleKeyPressName = (key) => {\n//         if (key === 'x') {\n//             // Delete the last character\n//             setPatientName((prevName) => prevName.slice(0, -1));\n//         } else {\n//             // Append the character\n//             setPatientName((prevName) => prevName + key);\n//         }\n//     };\n\n//     const handleSubmit = () => {\n\n//         if (patientName.trim() === '') {\n//             alert('Please enter Name');\n//             return;\n//         }\n\n//         setIsConfirmationPressed(false);\n//         setIsConfirmationPressed2(true);\n\n//         // You may generate a unique number, date, and time here\n//         const currentTime1 = new Date().toLocaleTimeString();\n\n//         setCurrentTime(currentTime1);\n\n//         // Reset the state after 10 seconds\n//         setTimeout(() => {\n//             setPatientId('');\n//             setPatientName('');\n//             setIsConfirmationPressed2(false);\n//         }, 5000);\n\n//     };\n\n//     const hebrewCharacters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ך', 'ל', 'מ', 'ם', 'נ', 'ן', 'ס', 'ע', 'פ', 'ף', 'צ', 'ץ', 'ק', 'ר', 'ש', 'ת'];\n\n//     return (\n//         <div className='insertPatientDetails'>\n//             <div className='patientClinicInsert'>\n//                 {!isConfirmationPressed && !isConfirmationPressed2 && (\n//                     <>\n//                         <div className='chooseClinic'>בחר קופת חולים</div>\n//                         <div className='allClinic'>\n//                             <button className='clinic' >\n//                                 מכבי\n//                             </button>\n//                             <button className='clinic' >\n//                                 מאוחדת\n//                             </button>\n//                             <button className='clinic' >\n//                                 כללית\n//                             </button>\n//                             <button className='clinic' >\n//                                 לאומית\n//                             </button>\n//                             <button className='clinic' >\n//                                 אחר\n//                             </button>\n//                             <button\n//                                 className='saveClinic'\n//                                 onClick={() => handleKeyPressNumbers('המשך')}\n//                                 key={'המשך'}\n//                             >\n//                                 המשך\n//                             </button>\n//                         </div>\n//                     </>\n//                 )}\n//             </div>\n//             <div className='patientNameInsert'>\n\n//                 {isConfirmationPressed && (\n//                     <>\n//                         <div className='patientName enter'>\n//                             <input\n//                                 placeholder=\"הכנס שם מלא  \"\n//                                 type=\"text\"\n//                                 value={patientName}\n//                                 onChange={(e) => setPatientName(e.target.value)}\n//                                 className='inputBtn'\n//                             />\n//                         </div>\n//                         <div className='virtual-keyboard hebrew'>\n//                             {[...hebrewCharacters].map((key) => (\n//                                 <button\n//                                     key={key}\n//                                     className='keyboard'\n//                                     onClick={() => handleKeyPressName(key.toString())}\n//                                 >\n//                                     {key}\n//                                 </button>\n//                             ))}\n//                             <button\n//                                 className='keyboard'\n//                                 onClick={() => handleKeyPressName(' ')}\n//                                 key={' '}\n//                             >\n//                                 __\n//                             </button>\n//                             <button\n//                                 className=' keyboard deleteNumber'\n//                                 onClick={() => handleKeyPressName('x')}\n//                                 key={'x'}\n//                             >\n//                                 x\n//                             </button>\n//                         </div>\n//                         <button className='getNumber' onClick={handleSubmit}>\n//                             קבלת תור\n//                         </button>\n//                     </>\n//                 )}\n//             </div>\n//             <div className='patientEnterNote'>\n//             {isConfirmationPressed2 && (\n//                 <>\n//                     <div>\n//                         <div className='patientInfo'>\n//                             <div className='numberCont'>מספרך בתור:\n//                                 <div className='uniqueNumber'>\n//                                     {uniqueNumber}\n//                                 </div>\n//                             </div>\n//                             <div>שם: {patientName}</div>\n//                             <div>שעה: {currentTime}</div>\n//                         </div>\n//                         <div className='saveNumber'>\n//                             יש לשמור את המספר לאורך הטיפול\n//                         </div>\n//                     </div>\n//                 </>\n//             )}\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default PatientEnter;\nvar _c;\n$RefreshReg$(_c, \"PatientEnter\");","map":{"version":3,"names":["doctorImg","jsxDEV","_jsxDEV","PatientEnter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/e0509/Desktop/MedicalCenterProject/client/src/PatientEnter/patientEnter.jsx"],"sourcesContent":["import './patientEnter.css'\r\nimport doctorImg from './doctor.png'\r\n\r\nconst PatientEnter = () => {\r\n\r\n\r\n    return (\r\n        <div className='patientEnterCont'>\r\n            <div className='enterBoard'>\r\n\r\n            </div>\r\n\r\n            <img src={doctorImg} alt='doctorImg' className='doctorImg'></img>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientEnter;\r\n// import './patientEnter.css';\r\n// import React, { useState } from 'react';\r\n\r\n// const PatientEnter = () => {\r\n//     const [patientId, setPatientId] = useState('');\r\n//     const [patientName, setPatientName] = useState('');\r\n//     const [isConfirmationPressed, setIsConfirmationPressed] = useState(false);\r\n//     const [isConfirmationPressed2, setIsConfirmationPressed2] = useState(false);\r\n//     const [currentTime, setCurrentTime] = useState('');\r\n//     const [uniqueNumber, setUniqueNumber] = useState('F6');\r\n\r\n//     const handleKeyPressNumbers = (key) => {\r\n//         if (key === 'x') {\r\n//             // Delete the last character\r\n//             setPatientId((prevId) => prevId.slice(0, -1));\r\n//         } else if (key === 'המשך') {\r\n//             setIsConfirmationPressed(true);\r\n//         } else {\r\n//             // Append the digit or character\r\n//             setPatientId((prevId) => prevId + key);\r\n//         }\r\n//     };\r\n\r\n//     const handleKeyPressName = (key) => {\r\n//         if (key === 'x') {\r\n//             // Delete the last character\r\n//             setPatientName((prevName) => prevName.slice(0, -1));\r\n//         } else {\r\n//             // Append the character\r\n//             setPatientName((prevName) => prevName + key);\r\n//         }\r\n//     };\r\n\r\n//     const handleSubmit = () => {\r\n\r\n//         if (patientName.trim() === '') {\r\n//             alert('Please enter Name');\r\n//             return;\r\n//         }\r\n\r\n//         setIsConfirmationPressed(false);\r\n//         setIsConfirmationPressed2(true);\r\n\r\n//         // You may generate a unique number, date, and time here\r\n//         const currentTime1 = new Date().toLocaleTimeString();\r\n\r\n//         setCurrentTime(currentTime1);\r\n\r\n//         // Reset the state after 10 seconds\r\n//         setTimeout(() => {\r\n//             setPatientId('');\r\n//             setPatientName('');\r\n//             setIsConfirmationPressed2(false);\r\n//         }, 5000);\r\n\r\n//     };\r\n\r\n//     const hebrewCharacters = ['א', 'ב', 'ג', 'ד', 'ה', 'ו', 'ז', 'ח', 'ט', 'י', 'כ', 'ך', 'ל', 'מ', 'ם', 'נ', 'ן', 'ס', 'ע', 'פ', 'ף', 'צ', 'ץ', 'ק', 'ר', 'ש', 'ת'];\r\n\r\n//     return (\r\n//         <div className='insertPatientDetails'>\r\n//             <div className='patientClinicInsert'>\r\n//                 {!isConfirmationPressed && !isConfirmationPressed2 && (\r\n//                     <>\r\n//                         <div className='chooseClinic'>בחר קופת חולים</div>\r\n//                         <div className='allClinic'>\r\n//                             <button className='clinic' >\r\n//                                 מכבי\r\n//                             </button>\r\n//                             <button className='clinic' >\r\n//                                 מאוחדת\r\n//                             </button>\r\n//                             <button className='clinic' >\r\n//                                 כללית\r\n//                             </button>\r\n//                             <button className='clinic' >\r\n//                                 לאומית\r\n//                             </button>\r\n//                             <button className='clinic' >\r\n//                                 אחר\r\n//                             </button>\r\n//                             <button\r\n//                                 className='saveClinic'\r\n//                                 onClick={() => handleKeyPressNumbers('המשך')}\r\n//                                 key={'המשך'}\r\n//                             >\r\n//                                 המשך\r\n//                             </button>\r\n//                         </div>\r\n//                     </>\r\n//                 )}\r\n//             </div>\r\n//             <div className='patientNameInsert'>\r\n\r\n//                 {isConfirmationPressed && (\r\n//                     <>\r\n//                         <div className='patientName enter'>\r\n//                             <input\r\n//                                 placeholder=\"הכנס שם מלא  \"\r\n//                                 type=\"text\"\r\n//                                 value={patientName}\r\n//                                 onChange={(e) => setPatientName(e.target.value)}\r\n//                                 className='inputBtn'\r\n//                             />\r\n//                         </div>\r\n//                         <div className='virtual-keyboard hebrew'>\r\n//                             {[...hebrewCharacters].map((key) => (\r\n//                                 <button\r\n//                                     key={key}\r\n//                                     className='keyboard'\r\n//                                     onClick={() => handleKeyPressName(key.toString())}\r\n//                                 >\r\n//                                     {key}\r\n//                                 </button>\r\n//                             ))}\r\n//                             <button\r\n//                                 className='keyboard'\r\n//                                 onClick={() => handleKeyPressName(' ')}\r\n//                                 key={' '}\r\n//                             >\r\n//                                 __\r\n//                             </button>\r\n//                             <button\r\n//                                 className=' keyboard deleteNumber'\r\n//                                 onClick={() => handleKeyPressName('x')}\r\n//                                 key={'x'}\r\n//                             >\r\n//                                 x\r\n//                             </button>\r\n//                         </div>\r\n//                         <button className='getNumber' onClick={handleSubmit}>\r\n//                             קבלת תור\r\n//                         </button>\r\n//                     </>\r\n//                 )}\r\n//             </div>\r\n//             <div className='patientEnterNote'>\r\n//             {isConfirmationPressed2 && (\r\n//                 <>\r\n//                     <div>\r\n//                         <div className='patientInfo'>\r\n//                             <div className='numberCont'>מספרך בתור:\r\n//                                 <div className='uniqueNumber'>\r\n//                                     {uniqueNumber}\r\n//                                 </div>\r\n//                             </div>\r\n//                             <div>שם: {patientName}</div>\r\n//                             <div>שעה: {currentTime}</div>\r\n//                         </div>\r\n//                         <div className='saveNumber'>\r\n//                             יש לשמור את המספר לאורך הטיפול\r\n//                         </div>\r\n//                     </div>\r\n//                 </>\r\n//             )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default PatientEnter;\r\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,SAAS,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAGvB,oBACID,OAAA;IAAKE,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BH,OAAA;MAAKE,SAAS,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB,CAAC,eAENP,OAAA;MAAKQ,GAAG,EAAEV,SAAU;MAACW,GAAG,EAAC,WAAW;MAACP,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAACG,EAAA,GAZIT,YAAY;AAclB,eAAeA,YAAY;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}