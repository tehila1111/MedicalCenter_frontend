{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\e0509\\\\Desktop\\\\MedicalCenterProject\\\\client\\\\src\\\\ReceptionQueue\\\\allPatients.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './reception.css';\nimport SearchIcon from '@mui/icons-material/Search';\nimport url from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllPatients = ({\n  onPatientSelect\n}) => {\n  _s();\n  const [searchText, setSearchText] = useState(\"\");\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [allPatients, setAllPatients] = useState([]);\n  useEffect(() => {\n    const apiUrl = `${url}/main-table`;\n    axios.get(apiUrl).then(response => {\n      setAllPatients(response.data.data);\n    }).catch(error => {\n      console.error('Error fetching reception queue data:', error);\n    });\n  }, []);\n  const handlePatientSelect = uniqueNumber => {\n    setSelectedPatient(uniqueNumber);\n    // Notify the parent component about the selected patient\n    onPatientSelect(uniqueNumber);\n  };\n  const filteredPatients = allPatients.filter(({\n    name,\n    uniqueNumber\n  }) => name.toLowerCase().includes(searchText.toLowerCase()) || uniqueNumber.toLowerCase().includes(searchText.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"patientSearch\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchDiv\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"selectPatient\",\n          placeholder: \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9 \\u05DE\\u05D8\\u05D5\\u05E4\\u05DC...\",\n          type: \"text\",\n          value: searchText,\n          onChange: ({\n            target\n          }) => setSearchText(target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scrollList\",\n        children: filteredPatients.map(({\n          name,\n          uniqueNumber,\n          _id\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allPatients\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"patientDet\",\n            name: \"selectPatient\",\n            type: \"radio\",\n            value: _id,\n            checked: selectedPatient === _id,\n            onChange: () => handlePatientSelect(_id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"patientDet\",\n            children: [\" \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"patientDet\",\n            children: uniqueNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n_s(AllPatients, \"Xtk0OiKM6TmQ1bQSqOJiGpqrk0I=\");\n_c = AllPatients;\nexport default AllPatients;\nvar _c;\n$RefreshReg$(_c, \"AllPatients\");","map":{"version":3,"names":["React","useState","useEffect","axios","SearchIcon","url","jsxDEV","_jsxDEV","Fragment","_Fragment","AllPatients","onPatientSelect","_s","searchText","setSearchText","selectedPatient","setSelectedPatient","allPatients","setAllPatients","apiUrl","get","then","response","data","catch","error","console","handlePatientSelect","uniqueNumber","filteredPatients","filter","name","toLowerCase","includes","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","onChange","target","map","_id","checked","_c","$RefreshReg$"],"sources":["C:/Users/e0509/Desktop/MedicalCenterProject/client/src/ReceptionQueue/allPatients.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './reception.css'\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport url from '../config'\r\n\r\n\r\nconst AllPatients = ({ onPatientSelect }) => {\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n    const [allPatients, setAllPatients] = useState([])\r\n\r\n    useEffect(() => {\r\n        const apiUrl =  `${url}/main-table`;\r\n\r\n        axios.get(apiUrl)\r\n            .then(response => {\r\n              setAllPatients(response.data.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching reception queue data:', error);\r\n            });\r\n    }, []); \r\n\r\n\r\n    const handlePatientSelect = (uniqueNumber) => {\r\n        setSelectedPatient(uniqueNumber);\r\n        // Notify the parent component about the selected patient\r\n        onPatientSelect(uniqueNumber);\r\n      };\r\n    \r\n      const filteredPatients = allPatients.filter(\r\n        ({ name, uniqueNumber }) =>\r\n          name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n          uniqueNumber.toLowerCase().includes(searchText.toLowerCase())\r\n      );\r\n    \r\n      return (\r\n        <>\r\n          <div className='patientSearch'>\r\n            <div className='searchDiv'>\r\n              <SearchIcon />\r\n              <input\r\n                className='selectPatient'\r\n                placeholder='חיפוש מטופל...'\r\n                type=\"text\"\r\n                value={searchText}\r\n                onChange={({ target }) => setSearchText(target.value)}\r\n              />\r\n            </div>\r\n            <div className='scrollList'>\r\n              {filteredPatients.map(({ name, uniqueNumber,_id }) => (\r\n                <div className='allPatients' key={_id}>\r\n                  <input\r\n                    className='patientDet'\r\n                    name='selectPatient'\r\n                    type=\"radio\"\r\n                    value={_id}\r\n                    checked={selectedPatient === _id}\r\n                    onChange={() => handlePatientSelect(_id)}\r\n                  />\r\n                  <span className='patientDet'> {name}</span>\r\n                  <span className='patientDet'>{uniqueNumber}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    };\r\n    \r\n    export default AllPatients;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}